{"version":3,"sources":["../src/jquery-serialize-object.js"],"names":["ithoughts","$","fn","extend","serializeObject","json","map","serializeArray","isNested","formvalue","name","contains","fvn","value","jsonLocal","nestings","replace","split","nestingsCount","length","i","push","undefined","serializeInputsObject","forceValue","each","index","element","valueThis","valuePtr"],"mappings":"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","file":"jquery-serialize-object.js","sourcesContent":["/**\n * @file jQuery extension to help serializing forms\n *\n * @author Gerkin\n * @copyright 2016\n * @license https://www.gnu.org/licenses/gpl-3.0.html GPLv3\n * @package iThoughts-toolbox\n *\n */\n\n'use strict';\n\nconst ithoughts = require( './ithoughts-core.js' );\n\n/*jslint plusplus: true*/\n\nconst {$} = ithoughts;\n\n/**\n\t * Send a form through ajax\n\t * @method\texternal:\"jQuery\".fn.serializeObject\n\t * @returns {object}\tAssociative object representing the form\n\t */\n$.fn.extend({\n\tserializeObject() {\n\t\tconst json = {};\n\t\t$.map( $( this ).serializeArray(), formvalue => {\n\t\t\tconst isNested = formvalue.name.contains( '[' );\n\t\t\tconst fvn = formvalue.value || '';\n\t\t\tif ( isNested ) {\n\t\t\t\tlet jsonLocal = json;\n\t\t\t\tconst nestings = formvalue.name.replace( /\\]/gi, '' ).split( '[' );\n\t\t\t\tconst nestingsCount = nestings.length;\n\t\t\t\tfor ( let i = 0; i < nestingsCount; i++ ) {\n\t\t\t\t\tif ( i === nestingsCount - 1 ) {\n\t\t\t\t\t\tif ( nestings[i] !== '' ) {\n\t\t\t\t\t\t\tif ( jsonLocal[nestings[i]]) {\n\t\t\t\t\t\t\t\tif ( 'string' === typeof jsonLocal[nestings[i]]) {\n\t\t\t\t\t\t\t\t\tjsonLocal[nestings[i]] = [ jsonLocal[nestings[i]] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tjsonLocal[nestings[i]].push( fvn );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjsonLocal[nestings[i]] = fvn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjsonLocal.push( fvn );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjsonLocal = jsonLocal[nestings[i]] = jsonLocal[nestings[i]] || ( '' === nestings[i + 1] ? [] : {});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( json[formvalue.name] !== undefined ) {\n\t\t\t\tif ( !json[formvalue.name].push ) {\n\t\t\t\t\tjson[formvalue.name] = [ json[formvalue.name] ];\n\t\t\t\t}\n\t\t\t\tjson[formvalue.name].push( fvn );\n\t\t\t} else {\n\t\t\t\tjson[formvalue.name] = fvn;\n\t\t\t}\n\t\t});\n\t\treturn json;\n\t},\n\tserializeInputsObject( forceValue ) {\n\t\tconst value = {};\n\t\tthis.each(( index, element ) => {\n\t\t\tconst name = element.name;\n\t\t\tconst nestings = name.replace( /\\]/gi, '' ).split( '[' );\n\t\t\t\n\t\t\tconst valueThis = {};\n\t\t\tconst nestingsCount = nestings.length;\n\t\t\tlet valuePtr = valueThis;\n\t\t\tfor ( let i = 0; i < nestingsCount; i++ ) {\n\t\t\t\tif ( i === nestingsCount - 1 ) {\n\t\t\t\t\tvaluePtr[nestings[i]] = typeof forceValue !== 'undefined' ? forceValue : this.value;\n\t\t\t\t} else {\n\t\t\t\t\tvaluePtr = ( valuePtr[nestings[i]] = {});\n\t\t\t\t}\n\t\t\t}\n\t\t\t$.extend( value, valueThis );\n\t\t});\n\t\treturn value;\n\t},\n});\n"]}